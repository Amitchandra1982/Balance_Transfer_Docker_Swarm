# ---------------------------------------------------------------------------------------------
# This docker compose file bring up the Docker containers for run Hyperledger Fabric Network
# ---------------------------------------------------------------------------------------------
version: '3.4'

networks:
  my-net:
    driver: overlay
    attachable: true

services:

  mysql.ca.customer:
    image: mysql:5.7
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=fabric_ca
    command: mysqld --sql_mode=""
    ports:
      - "15201:3306"
    #container_name: mysql.ca.customer
    volumes:
      - ./Backup/customer/CA:/var/lib/mysql
    networks:
      - my-net

  mysql.ca.bank:
    #container_name: mysql.ca.bank
    image: mysql:5.7
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=fabric_ca
    command: mysqld --sql_mode=""
    ports:
      - "15202:3306"
    volumes:
      - ./Backup/bank/CA:/var/lib/mysql
    networks:
      - my-net


  ca.customer.jeabc.com:
    #container_name: ca.customer.jeabc.com
    image: hyperledger/fabric-ca:1.2.0
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca-customer
      - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.customer.jeabc.com-cert.pem
      - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/0c9b255c69092f73bb2f74213de07413abff68f923e13ef7fe4005a5a5f82e21_sk
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.customer.jeabc.com-cert.pem
      - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/0c9b255c69092f73bb2f74213de07413abff68f923e13ef7fe4005a5a5f82e21_sk
      - FABRIC_CA_SERVER_DB_TYPE=mysql
      - FABRIC_CA_SERVER_DB_DATASOURCE=root:${MYSQL_PASSWORD}@tcp(mysql.ca.customer:3306)/fabric_ca?parseTime=true
    ports:
      - "15111:7054"
    command: sh -c 'fabric-ca-server start -b admin:adminpw -d'
    volumes:
      - ./channel/crypto-config/peerOrganizations/customer.jeabc.com/ca/:/etc/hyperledger/fabric-ca-server-config
    networks:
      - my-net
    depends_on:
      - mysql.ca.customer

  ca.bank.jeabc.com:
    #container_name: ca.bank.jeabc.com
    image: hyperledger/fabric-ca:1.2.0
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca-bank
      - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.bank.jeabc.com-cert.pem
      - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/c1a7c10d23dd478f921720b8a03a97ba75264da31bf33b340a78a3b92803308a_sk
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.bank.jeabc.com-cert.pem
      - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/c1a7c10d23dd478f921720b8a03a97ba75264da31bf33b340a78a3b92803308a_sk
      - FABRIC_CA_SERVER_DB_TYPE=mysql
      - FABRIC_CA_SERVER_DB_DATASOURCE=root:${MYSQL_PASSWORD}@tcp(mysql.ca.bank:3306)/fabric_ca?parseTime=true
    ports:
      - "15112:7054"
    command: sh -c 'fabric-ca-server start -b admin:adminpw -d'
    volumes:
      - ./channel/crypto-config/peerOrganizations/bank.jeabc.com/ca/:/etc/hyperledger/fabric-ca-server-config
    networks:
      - my-net
    depends_on:
      - mysql.ca.bank


  zookeeper0:
    #container_name: zookeeper0.jeabc.com
    image: hyperledger/fabric-zookeeper
    ports:
      - '2181'
      - '2888'
      - '3888'
    environment:
      - ZOO_MY_ID=1
      - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888
    volumes:
      - ./Backup/Zookeeper/zk0/data:/data
      - ./Backup/Zookeeper/zk0/datalog:/datalog
    networks:
      - my-net

  zookeeper1:
    #container_name: zookeeper1.jeabc.com
    image: hyperledger/fabric-zookeeper
    ports:
      - '2181'
      - '2888'
      - '3888'
    environment:
      - ZOO_MY_ID=2
      - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888
    volumes:
      - ./Backup/Zookeeper/zk1/data:/data
      - ./Backup/Zookeeper/zk1/datalog:/datalog
    networks:
      - my-net

  zookeeper2:
    #container_name: zookeeper2.jeabc.com
    image: hyperledger/fabric-zookeeper
    ports:
      - '2181'
      - '2888'
      - '3888'
    environment:
      - ZOO_MY_ID=3
      - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888
    volumes:
      - ./Backup/Zookeeper/zk2/data:/data
      - ./Backup/Zookeeper/zk2/datalog:/datalog
    networks:
      - my-net

  kafka0:
    #container_name: kafka0.jeabc.com
    image: hyperledger/fabric-kafka
    environment:
      - KAFKA_LOG_RETENTION_MS=-1
      - KAFKA_MESSAGE_MAX_BYTES=103809024
      - KAFKA_REPLICA_FETCH_MAX_BYTES=103809024
      - KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE=false
      - KAFKA_BROKER_ID=0
      - KAFKA_MIN_INSYNC_REPLICAS=2
      - KAFKA_DEFAULT_REPLICATION_FACTOR=3
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
    ports:
      - '9092'
    volumes:
      - ./Backup/Kafka/kafka0:/tmp/kafka-logs
    networks:
      - my-net
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2
    ports:
      - '9092'

  kafka1:
    #container_name: kafka1.jeabc.com
    image: hyperledger/fabric-kafka
    environment:
      - KAFKA_LOG_RETENTION_MS=-1
      - KAFKA_MESSAGE_MAX_BYTES=103809024
      - KAFKA_REPLICA_FETCH_MAX_BYTES=103809024
      - KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE=false
      - KAFKA_BROKER_ID=1
      - KAFKA_MIN_INSYNC_REPLICAS=2
      - KAFKA_DEFAULT_REPLICATION_FACTOR=3
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
    volumes:
      - ./Backup/Kafka/kafka1:/tmp/kafka-logs
    networks:
      - my-net
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2
    ports:
      - '9092'

  kafka2:
    #container_name: kafka2.jeabc.com
    image: hyperledger/fabric-kafka
    environment:
      - KAFKA_LOG_RETENTION_MS=-1
      - KAFKA_MESSAGE_MAX_BYTES=103809024
      - KAFKA_REPLICA_FETCH_MAX_BYTES=103809024
      - KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE=false
      - KAFKA_BROKER_ID=2
      - KAFKA_MIN_INSYNC_REPLICAS=2
      - KAFKA_DEFAULT_REPLICATION_FACTOR=3
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
    volumes:
      - ./Backup/Kafka/kafka2:/tmp/kafka-logs
    networks:
      - my-net
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2
    ports:
      - '9092'

  kafka3:
    #container_name: kafka3.jeabc.com
    image: hyperledger/fabric-kafka
    environment:
      - KAFKA_LOG_RETENTION_MS=-1
      - KAFKA_MESSAGE_MAX_BYTES=103809024
      - KAFKA_REPLICA_FETCH_MAX_BYTES=103809024
      - KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE=false
      - KAFKA_BROKER_ID=3
      - KAFKA_MIN_INSYNC_REPLICAS=2
      - KAFKA_DEFAULT_REPLICATION_FACTOR=3
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
    volumes:
      - ./Backup/Kafka/kafka3:/tmp/kafka-logs
    networks:
      - my-net
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2
    ports:
      - '9092'

  orderer0.jeabc.com:
    #container_name: orderer0.jeabc.com
    image: hyperledger/fabric-orderer:1.2.0
    environment:
      - ORDERER_GENERAL_LOGLEVEL=info
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/msp/orderer/msp
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_CLIENTAUTHREQUIRED=true  # enable Mutual TLS
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/etc/hyperledger/msp/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/etc/hyperledger/msp/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/etc/hyperledger/msp/orderer/msp/cacerts/ca.jeabc.com-cert.pem, /etc/hyperledger/msp/peerCustomer/msp/cacerts/ca.customer.jeabc.com-cert.pem, /etc/hyperledger/msp/peerBank/msp/cacerts/ca.bank.jeabc.com-cert.pem]
      - ORDERER_GENERAL_TLS_CLIENTROOTCAS=[/etc/hyperledger/msp/orderer/msp/cacerts/ca.jeabc.com-cert.pem, /etc/hyperledger/msp/peerCustomer/msp/cacerts/ca.customer.jeabc.com-cert.pem, /etc/hyperledger/msp/peerBank/msp/cacerts/ca.bank.jeabc.com-cert.pem]
      - ORDERER_KAFKA_RETRY_SHORTINTERVAL=${ORDERER_KAFKA_RETRY_SHORTINTERVAL}
      - ORDERER_KAFKA_RETRY_SHORTTOTAL=${ORDERER_KAFKA_RETRY_SHORTTOTAL}
      - ORDERER_KAFKA_RETRY_LONGINTERVAL=${ORDERER_KAFKA_RETRY_LONGINTERVAL}
      - ORDERER_KAFKA_RETRY_LONGTOTAL=${ORDERER_KAFKA_RETRY_LONGTOTAL}
      - ORDERER_KAFKA_VERBOSE=true
      - ORDERER_GENERAL_LEDGERTYPE=file
    ports:
      - 15101:7050
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderers
    command: orderer
    volumes:
      - ./channel/:/etc/hyperledger/configtx
      - ./channel/crypto-config/peerOrganizations/customer.jeabc.com/peers/peer0.customer.jeabc.com/:/etc/hyperledger/msp/peerCustomer
      - ./channel/crypto-config/peerOrganizations/bank.jeabc.com/peers/peer0.bank.jeabc.com/:/etc/hyperledger/msp/peerBank
      - ./channel/crypto-config/ordererOrganizations/jeabc.com/orderers/orderer0.jeabc.com/:/etc/hyperledger/msp/orderer
    networks:
      - my-net
    depends_on:
      - kafka0
      - kafka1
      - kafka2
      - kafka3

  orderer1.jeabc.com:
    #container_name: orderer1.jeabc.com
    image: hyperledger/fabric-orderer:1.2.0
    environment:
      - ORDERER_GENERAL_LOGLEVEL=info
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/msp/orderer/msp
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_CLIENTAUTHREQUIRED=true  # enable Mutual TLS
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/etc/hyperledger/msp/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/etc/hyperledger/msp/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/etc/hyperledger/msp/orderer/msp/cacerts/ca.jeabc.com-cert.pem, /etc/hyperledger/msp/peerCustomer/msp/cacerts/ca.customer.jeabc.com-cert.pem, /etc/hyperledger/msp/peerBank/msp/cacerts/ca.bank.jeabc.com-cert.pem]
      - ORDERER_GENERAL_TLS_CLIENTROOTCAS=[/etc/hyperledger/msp/orderer/msp/cacerts/ca.jeabc.com-cert.pem, /etc/hyperledger/msp/peerCustomer/msp/cacerts/ca.customer.jeabc.com-cert.pem, /etc/hyperledger/msp/peerBank/msp/cacerts/ca.bank.jeabc.com-cert.pem]
      - ORDERER_KAFKA_RETRY_SHORTINTERVAL=${ORDERER_KAFKA_RETRY_SHORTINTERVAL}
      - ORDERER_KAFKA_RETRY_SHORTTOTAL=${ORDERER_KAFKA_RETRY_SHORTTOTAL}
      - ORDERER_KAFKA_RETRY_LONGINTERVAL=${ORDERER_KAFKA_RETRY_LONGINTERVAL}
      - ORDERER_KAFKA_RETRY_LONGTOTAL=${ORDERER_KAFKA_RETRY_LONGTOTAL}
      - ORDERER_KAFKA_VERBOSE=true
      - ORDERER_GENERAL_LEDGERTYPE=file
    ports:
      - 15102:7050
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderers
    command: orderer
    volumes:
      - ./channel/:/etc/hyperledger/configtx
      - ./channel/crypto-config/peerOrganizations/customer.jeabc.com/peers/peer0.customer.jeabc.com/:/etc/hyperledger/msp/peerCustomer
      - ./channel/crypto-config/peerOrganizations/bank.jeabc.com/peers/peer0.bank.jeabc.com/:/etc/hyperledger/msp/peerBank
      - ./channel/crypto-config/ordererOrganizations/jeabc.com/orderers/orderer1.jeabc.com/:/etc/hyperledger/msp/orderer
    networks:
      - my-net
    depends_on:
      - kafka0
      - kafka1
      - kafka2
      - kafka3

  orderer2.jeabc.com:
    #container_name: orderer2.jeabc.com
    image: hyperledger/fabric-orderer:1.2.0
    environment:
      - ORDERER_GENERAL_LOGLEVEL=info
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/msp/orderer/msp
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_CLIENTAUTHREQUIRED=true  # enable Mutual TLS
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/etc/hyperledger/msp/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/etc/hyperledger/msp/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/etc/hyperledger/msp/orderer/msp/cacerts/ca.jeabc.com-cert.pem, /etc/hyperledger/msp/peerCustomer/msp/cacerts/ca.customer.jeabc.com-cert.pem, /etc/hyperledger/msp/peerBank/msp/cacerts/ca.bank.jeabc.com-cert.pem]
      - ORDERER_GENERAL_TLS_CLIENTROOTCAS=[/etc/hyperledger/msp/orderer/msp/cacerts/ca.jeabc.com-cert.pem, /etc/hyperledger/msp/peerCustomer/msp/cacerts/ca.customer.jeabc.com-cert.pem, /etc/hyperledger/msp/peerBank/msp/cacerts/ca.bank.jeabc.com-cert.pem]
      - ORDERER_KAFKA_RETRY_SHORTINTERVAL=${ORDERER_KAFKA_RETRY_SHORTINTERVAL}
      - ORDERER_KAFKA_RETRY_SHORTTOTAL=${ORDERER_KAFKA_RETRY_SHORTTOTAL}
      - ORDERER_KAFKA_RETRY_LONGINTERVAL=${ORDERER_KAFKA_RETRY_LONGINTERVAL}
      - ORDERER_KAFKA_RETRY_LONGTOTAL=${ORDERER_KAFKA_RETRY_LONGTOTAL}
      - ORDERER_KAFKA_VERBOSE=true
      - ORDERER_GENERAL_LEDGERTYPE=file
    ports:
      - 15103:7050
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderers
    command: orderer
    volumes:
      - ./channel/:/etc/hyperledger/configtx
      - ./channel/crypto-config/peerOrganizations/customer.jeabc.com/peers/peer0.customer.jeabc.com/:/etc/hyperledger/msp/peerCustomer
      - ./channel/crypto-config/peerOrganizations/bank.jeabc.com/peers/peer0.bank.jeabc.com/:/etc/hyperledger/msp/peerBank
      - ./channel/crypto-config/ordererOrganizations/jeabc.com/orderers/orderer2.jeabc.com/:/etc/hyperledger/msp/orderer
    networks:
      - my-net
    depends_on:
      - kafka0
      - kafka1
      - kafka2
      - kafka3

  couchdb.peer0.customer.jeabc.com:
    #container_name: couchdb.peer0.customer.jeabc.com
    image: hyperledger/fabric-couchdb
    environment:
      - COUCHDB_USER=${COUCHDB_USERNAME}
      - COUCHDB_PASSWORD=${COUCHDB_PASSWORD}
    volumes:
      - ./Backup/customer/CouchDb/peer0:/opt/couchdb/data
    networks:
      - my-net
    ports:
      - 15190:5984
  peer0.customer.jeabc.com:
    #container_name: peer0.customer.jeabc.com
    image: hyperledger/fabric-peer:1.2.0
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_network
      - CORE_LOGGING_PEER=debug
      - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_ENDORSER_ENABLED=true
      - CORE_PEER_PROFILE_ENABLED=false
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/msp/
      - CORE_PEER_GOSSIP_PVTDATA_PUSHACKTIMEOUT=12s
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CLIENTAUTHREQUIRED=true #enable Mutual TLS
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/msp/peer/tls/server.key
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/msp/peer/tls/server.crt
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/msp/peer/tls/ca.crt
      #- CORE_PEER_EVENTS_ADDRESS=0.0.0.0:7053
      - CORE_PEER_TLS_CLIENTROOTCAS_FILES=/etc/hyperledger/msp/ca1/ca.crt /etc/hyperledger/msp/ca2/ca.crt 
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=${COUCHDB_USERNAME}
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=${COUCHDB_PASSWORD}
      - CORE_PEER_ID=peer0.customer.jeabc.com
      - CORE_PEER_LOCALMSPID=CustomerMSP
      - CORE_PEER_ADDRESS=peer0.customer.jeabc.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.customer.jeabc.com:7051
      - CORE_PEER_LISTENADDRESS=peer0.customer.jeabc.com:7051
      - CORE_PEER_GOSSIP_ENDPOINT=peer0.customer.jeabc.com:7051
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb.peer0.customer.jeabc.com:5984
    ports:
      - 15121:7051
      - 15123:7053
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    volumes:
      - /var/run/:/host/var/run/
      - ./channel/crypto-config/peerOrganizations/customer.jeabc.com/ca/ca.customer.jeabc.com-cert.pem:/etc/hyperledger/msp/ca1/ca.crt
      - ./channel/crypto-config/peerOrganizations/bank.jeabc.com/ca/ca.bank.jeabc.com-cert.pem:/etc/hyperledger/msp/ca2/ca.crt
      - ./channel/crypto-config/peerOrganizations/customer.jeabc.com/peers/peer0.customer.jeabc.com/:/etc/hyperledger/msp/peer
      - ./Backup/customer/Peer/peer0:/var/hyperledger/production
    depends_on:
      - orderer0.jeabc.com
      - orderer1.jeabc.com
      - orderer2.jeabc.com
      - couchdb.peer0.customer.jeabc.com
    networks:
      - my-net

  couchdb.peer1.customer.jeabc.com:
    #container_name: couchdb.peer1.customer.jeabc.com
    image: hyperledger/fabric-couchdb
    environment:
      - COUCHDB_USER=${COUCHDB_USERNAME}
      - COUCHDB_PASSWORD=${COUCHDB_PASSWORD}
    ports:
      - 15191:5984
    volumes:
      - ./Backup/customer/CouchDb/peer1:/opt/couchdb/data
    networks:
      - my-net

  peer1.customer.jeabc.com:
    #container_name: peer1.customer.jeabc.com
    image: hyperledger/fabric-peer:1.2.0
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_network
      - CORE_LOGGING_PEER=debug
      - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_ENDORSER_ENABLED=true
      - CORE_PEER_PROFILE_ENABLED=false
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/msp/
      - CORE_PEER_GOSSIP_PVTDATA_PUSHACKTIMEOUT=12s
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CLIENTAUTHREQUIRED=true #enable Mutual TLS
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/msp/peer/tls/server.key
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/msp/peer/tls/server.crt
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/msp/peer/tls/ca.crt
      #- CORE_PEER_EVENTS_ADDRESS=0.0.0.0:7053
      - CORE_PEER_TLS_CLIENTROOTCAS_FILES=/etc/hyperledger/msp/ca1/ca.crt /etc/hyperledger/msp/ca2/ca.crt 
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=${COUCHDB_USERNAME}
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=${COUCHDB_PASSWORD}
      - CORE_PEER_ID=peer1.customer.jeabc.com
      - CORE_PEER_LOCALMSPID=CustomerMSP
      - CORE_PEER_ADDRESS=peer1.customer.jeabc.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.customer.jeabc.com:7051
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb.peer1.customer.jeabc.com:5984
      - CORE_PEER_LISTENADDRESS=peer1.customer.jeabc.com:7051
      - CORE_PEER_GOSSIP_ENDPOINT=peer1.customer.jeabc.com:7051
    ports:
      - 15125:7051
      - 15127:7053
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    volumes:
      - /var/run/:/host/var/run/
      - ./channel/crypto-config/peerOrganizations/customer.jeabc.com/ca/ca.customer.jeabc.com-cert.pem:/etc/hyperledger/msp/ca1/ca.crt
      - ./channel/crypto-config/peerOrganizations/bank.jeabc.com/ca/ca.bank.jeabc.com-cert.pem:/etc/hyperledger/msp/ca2/ca.crt
      - ./channel/crypto-config/peerOrganizations/customer.jeabc.com/peers/peer1.customer.jeabc.com/:/etc/hyperledger/msp/peer
      - ./Backup/customer/Peer/peer1:/var/hyperledger/production
    depends_on:
      - orderer0.jeabc.com
      - orderer1.jeabc.com
      - orderer2.jeabc.com
      - peer0.customer.jeabc.com
      - couchdb.peer1.customer.jeabc.com
    networks:
      - my-net

  couchdb.peer2.customer.jeabc.com:
    #container_name: couchdb.peer2.customer.jeabc.com
    image: hyperledger/fabric-couchdb
    environment:
      - COUCHDB_USER=${COUCHDB_USERNAME}
      - COUCHDB_PASSWORD=${COUCHDB_PASSWORD}
    ports:
      - 15192:5984
    volumes:
      - ./Backup/customer/CouchDb/peer2:/opt/couchdb/data
    networks:
      - my-net

  peer2.customer.jeabc.com:
    #container_name: peer2.customer.jeabc.com
    image: hyperledger/fabric-peer:1.2.0
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_network
      - CORE_LOGGING_PEER=debug
      - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_ENDORSER_ENABLED=true
      - CORE_PEER_PROFILE_ENABLED=false
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/msp/
      - CORE_PEER_GOSSIP_PVTDATA_PUSHACKTIMEOUT=12s
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CLIENTAUTHREQUIRED=true #enable Mutual TLS
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/msp/peer/tls/server.key
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/msp/peer/tls/server.crt
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/msp/peer/tls/ca.crt
      #- CORE_PEER_EVENTS_ADDRESS=0.0.0.0:7053
      - CORE_PEER_TLS_CLIENTROOTCAS_FILES=/etc/hyperledger/msp/ca1/ca.crt /etc/hyperledger/msp/ca2/ca.crt 
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=${COUCHDB_USERNAME}
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=${COUCHDB_PASSWORD}
      - CORE_PEER_ID=peer2.customer.jeabc.com
      - CORE_PEER_LOCALMSPID=CustomerMSP
      - CORE_PEER_ADDRESS=peer2.customer.jeabc.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer2.customer.jeabc.com:7051
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb.peer2.customer.jeabc.com:5984
      - CORE_PEER_LISTENADDRESS=peer2.customer.jeabc.com:7051
      - CORE_PEER_GOSSIP_ENDPOINT=peer2.customer.jeabc.com:7051
    ports:
      - 15129:7051
      - 15131:7053
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    volumes:
      - /var/run/:/host/var/run/
      - ./channel/crypto-config/peerOrganizations/customer.jeabc.com/ca/ca.customer.jeabc.com-cert.pem:/etc/hyperledger/msp/ca1/ca.crt
      - ./channel/crypto-config/peerOrganizations/bank.jeabc.com/ca/ca.bank.jeabc.com-cert.pem:/etc/hyperledger/msp/ca2/ca.crt
      - ./channel/crypto-config/peerOrganizations/customer.jeabc.com/peers/peer2.customer.jeabc.com/:/etc/hyperledger/msp/peer
      - ./Backup/customer/Peer/peer2:/var/hyperledger/production
    depends_on:
      - orderer0.jeabc.com
      - orderer1.jeabc.com
      - orderer2.jeabc.com
      - peer0.customer.jeabc.com
      - peer1.customer.jeabc.com
      - couchdb.peer2.customer.jeabc.com
    networks:
      - my-net
